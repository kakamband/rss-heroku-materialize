{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "FeedInfo.svelte",
    "FeedList.svelte",
    "Header.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from \"svelte\";\nimport { Router, Route } from \"svelte-routing\";\nimport { getFeeds, putFeedInfos, getFeedInfos } from \"../api/rssFeedProxy.ts\";\n;\n;\nimport FeedInfo from \"./FeedInfo.svelte\";\nimport FeedList from \"./FeedList.svelte\";\nimport Auth from \"./Auth.svelte\";\nimport Header from \"./Header.svelte\";\nlet user = null;\nlet feedInfos = [];\nlet feeds = [];\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    feeds = yield getFeeds(feedInfos);\n}));\nconst onExec = (e) => __awaiter(void 0, void 0, void 0, function* () {\n    switch (e.detail.payload) {\n        case \"confirm\":\n            yield putFeedInfos(user.id, feedInfos);\n            feeds = yield getFeeds(feedInfos);\n            break;\n        case \"getFeedInfos\":\n            feedInfos = yield getFeedInfos(user.id);\n            break;\n        case \"login\":\n            feedInfos = yield getFeedInfos(user.id);\n            feeds = yield getFeeds(feedInfos);\n            break;\n        case \"logout\":\n            feedInfos = [];\n            feeds = [];\n            break;\n        default:\n            break;\n    }\n});\n</script>\n\n<Header user={user}>\n  <span slot=\"auth\"> \n    <Auth bind:user={user} on:exec={onExec} />\n  </span>\n</Header>\n\n<main>\n  {#if user}\n  <Router>\n    <Route path=\"/\">\n      <FeedList feeds={feeds} />\n    </Route>\n    <Route path=\"/feed-info\">\n      <FeedInfo bind:feedInfos={feedInfos} on:exec={onExec} />\n    </Route>\n  </Router>\n  {/if}\n</main>\n\n<svelte:head>\n\t<!-- <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/kognise/water.css@latest/dist/light.min.css\"> -->\n\t<!-- <link rel=\"stylesheet\" href=\"https://newcss.net/new.min.css\"> -->\n\t<!-- <link rel=\"stylesheet\" href=\"https://unpkg.com/mvp.css\"> -->\n\t<!-- <link rel=\"stylesheet\" href=\"//writ.cmcenroe.me/1.0.4/writ.min.css\"> -->\n\t<!-- <link rel=\"stylesheet\" href=\"https://unpkg.com/sakura.css/css/sakura.css\"> -->\n  <!-- <link rel=\"stylesheet\" href=\"https://cdn.rawgit.com/kimeiga/bahunya/css/bahunya-0.1.3.css\" /> -->\n  <!-- <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/yegor256/tacit@gh-pages/tacit-css-1.5.1.min.css\"/> -->\n\n  <!-- <link rel=\"stylesheet\" href=\"https://fonts.xz.style/serve/inter.css\"> -->\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\">\n\n  <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.firebase.com/libs/firebaseui/3.5.2/firebaseui.css\" />\n  <script src=\"https://kit.fontawesome.com/5f39c04e79.js\" crossorigin=\"anonymous\"></script>\n</svelte:head>\n\n<style>\n  .wrapper {\n    /* position: absolute; */\n    /* position: relative; */\n    /* top: 3rem; */\n    /* height: 10rem; */\n    /* max-width: 980px; */\n  }\n\n  main {\n    /* position: relative; */\n    /* top: auto; */\n    /* top: 6rem; */\n    /* height: 10rem; */\n    /* width: 640px; */\n  }\n\n\t/* main {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t} */\n</style>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount, createEventDispatcher } from \"svelte\";\nimport { getFeeds } from \"../api/rssFeedProxy.ts\";\n;\nexport let feedInfos = [];\nlet valids = feedInfos.map(() => true);\nconst dispatch = createEventDispatcher();\nconst add = () => {\n    feedInfos = [...feedInfos, {\n            id: \"\",\n            url: \"\",\n        }];\n    valids = [...valids, true];\n};\nconst remove = (e) => {\n    const removeIndex = parseInt(e.target.name, 10);\n    feedInfos = feedInfos.filter((_, index) => index !== removeIndex);\n    valids = valids.filter((_, index) => index !== removeIndex);\n};\nconst checkValidation = (feedInfos) => __awaiter(void 0, void 0, void 0, function* () {\n    const feeds = yield getFeeds(feedInfos);\n    valids = feeds.map((feed) => feed.ok);\n});\nconst isAllValid = () => {\n    return !(valids.includes(false));\n};\nconst confirm = () => __awaiter(void 0, void 0, void 0, function* () {\n    yield checkValidation(feedInfos);\n    if (isAllValid()) {\n        dispatch(\"exec\", { payload: \"confirm\" });\n    }\n    else {\n        alert(\"不適切なFeed情報があります。\");\n    }\n});\nconst getFeedInfos = () => {\n    dispatch(\"exec\", { payload: \"getFeedInfos\" });\n};\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    yield checkValidation(feedInfos);\n}));\n</script>\n\n<style>\n  .feed-info {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  .url {\n    flex-grow: 1;\n  }\n\n  .nav {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 1rem;\n  }\n</style>\n\n<form>\n  {#each feedInfos as feedInfo, i}\n  <div class=\"feed-info\">\n    <input type=\"url\" class=\"url\" name={i} required bind:value={feedInfo.url}>\n\n    {#if valids[i]}\n    <span>○</span>\n    {:else}\n    <span>×</span>\n    {/if}\n\n    <input type=\"button\" name={i} value=\"削除\" on:click={remove}>\n  </div>\n  {/each}\n\n  <div class=\"nav\">\n    <input type=\"button\" value=\"追加\" on:click={add}>\n    <input type=\"button\" value=\"確定\" on:click={confirm}>\n    <input type=\"button\" value=\"サーバーから読込\" on:click={getFeedInfos}>\n  </div>\n</form>\n",
    "<script lang=\"ts\">;\nexport let feeds = [];\nconst sortFeed = (feed) => {\n    const contensSorted = feed.contents.sort((a, b) => {\n        if (a.date.isBefore(b.date))\n            return 1;\n        if (b.date.isBefore(a.date))\n            return -1;\n        return 0;\n    });\n    return Object.assign(Object.assign({}, feed), { contents: contensSorted });\n};\n$: feedsSorted = feeds.map((feed) => sortFeed(feed));\n</script>\n\n<style>\n  .content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .content-item {\n    margin-right: 1em;\n  }\n\n  .title {\n    overflow-wrap: break-word;\n    text-align: justify;\n  }\n  \n  .date {\n    white-space: nowrap;\n  }\n</style>\n\n{#each feedsSorted as feed}\n<form>\n  {#if feed.ok}\n  <details>\n    <summary>{feed.title}</summary>\n\n    <a href={feed.link} target=\"_blank\" rel=\"noopener noreferrer\">ホームページ</a>\n    <a href={feed.url} target=\"_blank\" rel=\"noopener noreferrer\">フィードのリンク</a>\n\n    {#if feed.description}\n    <p>{feed.description}</p>\n    {/if}\n\n    {#each feed.contents as content}\n    <div class=\"content\">\n      <p class=\"content-item title\"><a href={content.link} target=\"_blank\" rel=\"noopener noreferrer\">{content.title}</a></p>\n      <p class=\"date\">{content.date.format(\"YYYY/MM/DD HH:mm\")}</p>\n    </div>\n    {/each}\n  </details>\n\n  {:else}\n  <p><a href={feed.url}>{feed.url}</a>&nbsp;[{feed.status}]{feed.statusText}</p>\n  {/if}\n</form>\n{/each}\n",
    "<script>\n  import { Router, Link } from \"svelte-routing\";\n  export let user = null;\n</script>\n\n<header>\n  <i class=\"fas fa-rss\"></i>\n\n  <nav>\n    {#if user}\n    <Router>\n      <Link to=\"/\">Feedリスト</Link>\n      <Link to=\"/feed-info\">Feed設定</Link>\n    </Router>\n    {/if}\n\n    <slot name=\"auth\"></slot>\n  </nav>\n</header>\n\n<style>\n  header {\n    position: sticky;\n    top: 2rem;\n    margin: 0 1rem 0.5rem 1rem;\n    padding: 0.5rem;\n    background-color: darkgrey;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 1rem;\n  }\n\n  nav {\n    margin-left: auto;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 1rem;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAmFW,CAAC,AAMV,CAAC,AAED,IAAI,cAAC,CAAC,AAMN,CAAC;AC7CD,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,IAAI,AACX,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,CAAC,AACd,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,QAAQ,CACzB,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,IAAI,AACX,CAAC;ACnDD,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,aAAa,cAAC,CAAC,AACb,YAAY,CAAE,GAAG,AACnB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,aAAa,CAAE,UAAU,CACzB,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,WAAW,CAAE,MAAM,AACrB,CAAC;ACZD,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,MAAM,CAChB,GAAG,CAAE,IAAI,CACT,MAAM,CAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAC1B,OAAO,CAAE,MAAM,CACf,gBAAgB,CAAE,QAAQ,CAC1B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,GAAG,CAAE,IAAI,AACX,CAAC,AAED,GAAG,cAAC,CAAC,AACH,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,GAAG,CAAE,IAAI,AACX,CAAC"
}